EMBEDDED_URL = "https://www.python.org/ftp/python/3.8.2/python-3.8.2-embed-amd64.zip"
MANIFEST = """\
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
    <assemblyIdentity name="py3embed"
                      version="1.0.0.0"
                      type="win32"
                      processorArchitecture="amd64" />
    <file name="python3.dll" />
    <file name="python38.dll" />
    <file name="vcruntime140.dll" />
</assembly>
"""

STUBS = """\
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
AAACAAIAlQAAAJYoAAAAAA=="""

from zipfile import ZipFile
from io import BytesIO, SEEK_END

from base64 import b64decode
with ZipFile(BytesIO(b64decode(STUBS))) as z:
    app = BytesIO(z.read("zastubm.exe"))
    app.seek(0, SEEK_END)

from zipapp import create_archive
create_archive(source="a", target=app, main="foo:bar")

outdata = BytesIO()
with ZipFile(outdata, mode="w") as out:
    out.writestr("app.exe", app.getvalue())

    from urllib.request import urlopen
    with urlopen(EMBEDDED_URL) as f:
        data = f.read()

    with ZipFile(BytesIO(data)) as z:
        out.writestr("py3embed/py3embed.manifest", MANIFEST)
        for n in z.namelist():
            data = z.read(n)
            if n.endswith("._pth"):
                # Add the lib directory to the pth file
                data = data.replace(b"\n.\n", b"\n.\n../lib\n")
            out.writestr("py3embed/" + n, data)
        out.writestr("lib/", "")

with open("AppBundle.zip", "wb") as f:
    f.write(outdata.getvalue())

# Steps:
#
# 1. Make subdir "py3embed"
# 2. Unpack embedded dist there.
# 3. Add the manifest as "py3embed.manifest"
# 4. Make subdir "lib"
# 5. "pip install --target lib <dependencies>"
# 6. In python38._pth, add a line "../lib" after the line "."
# 7. Unpack zastubm[w].exe from the base64-encoded stubs
# 8. Open app.exe for binary write, and write zastub to it
# 9. zipapp.create_archive(source, fd_above, main)


